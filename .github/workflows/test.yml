name: Test

on:
  push:
    branches:
      - master
      - develop
  pull_request:

jobs:
  jest:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version-file: '.node-version'

    services:
      postgres:
        image: postgres:15
        ports:
          - 54312:5432
        env:
          POSTGRES_DB: test-misskey
          POSTGRES_HOST_AUTH_METHOD: trust
      redis:
        image: redis:7
        ports:
          - 56312:6379

    steps:
    - uses: actions/checkout@v3.3.0
      with:
        submodules: true
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3.6.0
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: |
          packages/backend/package-lock.json
          packages/client/package-lock.json
    - name: Install dependencies
      run: npm install --frozen-lockfile
      run: npm ci:all
    - name: Check package-lock.json
      run: git diff --exit-code package-lock.json
    - name: Copy Configure
      run: cp .github/misskey/test.yml .config
    - name: Build
      run: npm run build
    - name: Test
      run: npm run mocha

  e2e:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version-file: '.node-version'
        browser: [chrome]

    services:
      postgres:
        image: postgres:15
        ports:
          - 54312:5432
        env:
          POSTGRES_DB: test-misskey
          POSTGRES_HOST_AUTH_METHOD: trust
      redis:
        image: redis:7
        ports:
          - 56312:6379

    steps:
    - uses: actions/checkout@v3.3.0
      with:
        submodules: true
    # https://github.com/cypress-io/cypress-docker-images/issues/150
    #- name: Install mplayer for FireFox
    #  run: sudo apt install mplayer -y
    #  if: ${{ matrix.browser == 'firefox' }}
    #- uses: browser-actions/setup-firefox@latest
    #  if: ${{ matrix.browser == 'firefox' }}
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3.6.0
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: |
          packages/backend/package-lock.json
          packages/client/package-lock.json
    - name: Install dependencies
      run: npm install --frozen-lockfile
      run: npm run ci:all
    - name: Check package-lock.json
      run: git diff --exit-code package-lock.json
    - name: Copy Configure
      run: cp .github/misskey/test.yml .config
    - name: Build
      run: npm run build
    # https://github.com/cypress-io/cypress/issues/4351#issuecomment-559489091
    - name: ALSA Env
      run: echo -e 'pcm.!default {\n type hw\n card 0\n}\n\nctl.!default {\n type hw\n card 0\n}' > ~/.asoundrc
    # XXX: This tries reinstalling Cypress if the binary is not cached
    # Remove this when the cache issue is fixed
